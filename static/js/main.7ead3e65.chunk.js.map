{"version":3,"sources":["actions/index.js","utils/helpers.js","utils/api.js","components/FoodList.js","components/ShoppingList.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["ADD_RECIPE","REMOVE_FROM_CALENDAR","capitalize","str","toUpperCase","slice","API_ID","process","APP_KEY","FoodList","food","onSelect","length","className","map","item","onClick","key","label","src","image","alt","Math","floor","calories","source","ShoppingList","list","App","state","foodModalOpen","meal","day","ingredientsModalOpen","loadingFood","openFoodModal","setState","closeFoodModal","searchFood","e","input","value","preventDefault","trim","fetch","then","res","json","hits","recipe","fetchRecipes","openIngredientsModal","closeIngredientsModal","generateShoppingList","props","calendar","reduce","result","meals","breakfast","lunch","dinner","push","ings","ingredientLines","concat","this","selectRecipe","remove","mealOrder","role","aria-label","mealType","size","overlayClassName","isOpen","onRequestClose","contentLabel","delay","type","color","placeholder","ref","Component","connect","Object","keys","dispatch","data","addRecipe","removeFromCalendar","Boolean","window","location","hostname","match","initialCalendarState","sunday","monday","tuesday","wednesday","thursday","friday","saturday","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","next","console","group","info","log","getState","groupEnd","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ead3e65.chunk.js","sourcesContent":["export const ADD_RECIPE = 'ADD_RECIPE';\nexport const REMOVE_FROM_CALENDAR = 'REMOVE_FROM_CALENDAR';\n\n\nexport function addRecipe ({day, recipe, meal}) {\n    return {\n        type: 'ADD_RECIPE',\n        recipe,\n        day,\n        meal,\n    }\n}\n\n\nexport function removeFromCalendar ({ day, meal }) {\n    return {\n      type: REMOVE_FROM_CALENDAR,\n      day,\n      meal,\n    }\n  }","export function capitalize (str = '') {\n    return typeof str !== 'string'\n      ? ''\n      : str[0].toUpperCase() + str.slice(1)\n  } ","const API_ID = process.env.REACT_APP_API_ID\nconst APP_KEY = process.env.REACT_APP_APP_KEY\n\nexport function fetchRecipes (food = '') {\n  food = food.trim()\n\n  return fetch(`https://api.edamam.com/search?q=${food}&app_id=${API_ID}&app_key=${APP_KEY}`)\n    .then((res) => res.json())\n    .then(({ hits }) => hits.map(({ recipe }) => recipe))\n}","import React from 'react'\n\nfunction trim (str) {\n  return str.length > 16\n    ? str.slice(0, 16) + '...'\n    : str\n}\n\nexport default function FoodList ({ food, onSelect }) {\n  if (food.length === 0) {\n    return <p>Your search has 0 results.</p>\n  }\n\n  return (\n    <ul className='food-list'>\n      {food.map((item) => (\n        <li onClick={() => onSelect(item)} key={item.label}>\n          <h3>{trim(item.label)}</h3>\n          <img src={item.image} alt={item.label} />\n          <div>{Math.floor(item.calories)} Calories</div>\n          <div>{item.source}</div>\n        </li>\n      ))}\n    </ul>\n  )\n}","import React from 'react'\n\nexport default function ShoppingList ({ list }) {\n  return (\n    <div className='ingredients-list'>\n      <h3 className='subheader'>\n        Your Shopping List\n      </h3>\n      <ul>\n        {list.map((item) => (\n          <li key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addRecipe, removeFromCalendar } from '../actions'\nimport { capitalize } from '../utils/helpers'\nimport { FaCalendar } from \"react-icons/fa\"\nimport Modal from 'react-modal'\nimport { FaArrowCircleRight } from 'react-icons/fa'\nimport Loading from 'react-loading'\nimport { fetchRecipes } from '../utils/api'\nimport FoodList from './FoodList'\nimport ShoppingList from './ShoppingList'\n\n\nclass App extends Component {\n  state = {\n    foodModalOpen: false,\n    meal: null,\n    day: null,\n    food: null,\n    ingredientsModalOpen: false,\n    loadingFood: false,\n  }\n  openFoodModal = ({ meal, day }) => {\n    this.setState(() => ({\n      foodModalOpen: true,\n      meal,\n      day,\n    }))\n  }\n  closeFoodModal = () => {\n    this.setState(() => ({\n      foodModalOpen: false,\n      meal: null,\n      day: null,\n      food: null,\n    }))\n  }\n  searchFood = (e) => {\n    if (!this.input.value) {\n      return\n    }\n\n    e.preventDefault()\n\n    this.setState(() => ({ loadingFood: true }))\n\n    fetchRecipes(this.input.value)\n      .then((food) => this.setState(() => ({\n        food,\n        loadingFood: false,\n      })))\n  }\n  openIngredientsModal = () => this.setState(() => ({ ingredientsModalOpen: true }))\n  closeIngredientsModal = () => this.setState(() => ({ ingredientsModalOpen: false }))\n  generateShoppingList = () => {\n    return this.props.calendar.reduce((result, { meals }) => {\n      const { breakfast, lunch, dinner } = meals\n\n      breakfast && result.push(breakfast)\n      lunch && result.push(lunch)\n      dinner && result.push(dinner)\n\n      return result\n    }, [])\n    .reduce((ings, { ingredientLines }) => ings.concat(ingredientLines), [])\n  }\n  render() {\n    const { foodModalOpen, loadingFood, food, ingredientsModalOpen } = this.state\n    const { calendar, selectRecipe, remove } = this.props\n    const mealOrder = ['breakfast', 'lunch', 'dinner']\n\n\n    return (\n      <div className='container'>\n          <div className='nav'>\n            <h1 className='header'>Track Your Meal <span role=\"img\" aria-label=\"accessibale emoji\">🍔 🍟</span> </h1>\n            <button\n              className='shopping-list'\n              onClick={this.openIngredientsModal}>\n                Shopping List\n            </button>\n          </div>\n\n        <ul className='meal-types'>\n          {mealOrder.map((mealType) => (\n            <li key={mealType} className='subheader'>\n              {capitalize(mealType)}\n            </li>\n          ))}\n        </ul>\n\n        <div className='calendar'>\n          <div className='days'>\n            {calendar.map(({ day }) => <h3 key={day} className='subheader'>{capitalize(day)}</h3>)}\n          </div>\n          <div className='icon-grid'>\n            {calendar.map(({ day, meals }) => (\n              <ul key={day}>\n                {mealOrder.map((meal) => (\n                  <li key={meal} className='meal'>\n                    {meals[meal]\n                      ? <div className='food-item'>\n                          <img src={meals[meal].image} alt={meals[meal].label}/>\n                          <button onClick={() => remove({meal, day})}>Clear</button>\n                        </div>\n                      : <button onClick={() => this.openFoodModal({meal, day})} className='icon-btn'>\n                          <FaCalendar size={30}/>\n                        </button>}\n                  </li>\n                ))}\n              </ul>\n            ))}\n          </div>\n        </div>\n\n        <Modal\n          className='modal'\n          overlayClassName='overlay'\n          isOpen={foodModalOpen}\n          onRequestClose={this.closeFoodModal}\n          contentLabel='Modal'\n        >\n          <div>\n            {loadingFood === true\n              ? <Loading delay={200} type='spin' color='#222' className='loading' />\n              : <div className='search-container'>\n                  <h3 className='subheader'>\n                    Find a meal for {capitalize(this.state.day)} {this.state.meal}.\n                  </h3>\n                  <div className='search'>\n                    <input\n                      className='food-input'\n                      type='text'\n                      placeholder='Search Foods'\n                      ref={(input) => this.input = input}\n                    />\n                    <button\n                      className='icon-btn'\n                      onClick={this.searchFood}>\n                        <FaArrowCircleRight size={30}/>\n                    </button>\n                  </div>\n                  {food !== null && (\n                    <FoodList\n                      food={food}\n                      onSelect={(recipe) => {\n                        selectRecipe({ recipe, day: this.state.day, meal: this.state.meal })\n                        this.closeFoodModal()\n                      }}\n                    />)}\n                </div>}\n          </div>\n        </Modal>\n        <Modal\n          className='modal'\n          overlayClassName='overlay'\n          isOpen={ingredientsModalOpen}\n          onRequestClose={this.closeIngredientsModal}\n          contentLabel='Modal'\n        >\n          {ingredientsModalOpen && <ShoppingList list={this.generateShoppingList()}/>}\n        </Modal>\n\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps ({ food, calendar }) {\n  const dayOrder = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']\n\n  return {\n    calendar: dayOrder.map((day) => ({\n      day,\n      meals: Object.keys(calendar[day]).reduce((meals, meal) => {\n        meals[meal] = calendar[day][meal]\n          ? food[calendar[day][meal]]\n          : null\n\n        return meals\n      }, {})\n    })),\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    selectRecipe: (data) => dispatch(addRecipe(data)),\n    remove: (data) => dispatch(removeFromCalendar(data))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport { combineReducers } from 'redux'\n\nimport {\n    ADD_RECIPE,\n    REMOVE_FROM_CALENDAR,\n  } from '../actions'\n\n\n  function food (state = {}, action) {\n    switch (action.type) {\n      case ADD_RECIPE :\n        const { recipe } = action\n  \n        return {\n          ...state,\n          [recipe.label]: recipe,\n        }\n      default :\n        return state\n    }\n  }\n\n  \n  const initialCalendarState = {\n    sunday: {\n      breakfast: null,\n      lunch: null,\n      dinner: null,\n    },\n    monday: {\n      breakfast: null,\n      lunch: null,\n      dinner: null,\n    },\n    tuesday: {\n      breakfast: null,\n      lunch: null,\n      dinner: null,\n    },\n    wednesday: {\n      breakfast: null,\n      lunch: null,\n      dinner: null,\n    },\n    thursday: {\n      breakfast: null,\n      lunch: null,\n      dinner: null,\n    },\n    friday: {\n      breakfast: null,\n      lunch: null,\n      dinner: null,\n    },\n    saturday: {\n      breakfast: null,\n      lunch: null,\n      dinner: null,\n    },\n  }\n  \n  function calendar (state = initialCalendarState, action) {\n    const { day, recipe, meal } = action\n  \n    switch (action.type) {\n      case ADD_RECIPE :\n        return {\n          ...state,\n          [day]: {\n            ...state[day],\n            [meal]: recipe.label,\n          }\n        }\n      case REMOVE_FROM_CALENDAR :\n        return {\n          ...state,\n          [day]: {\n            ...state[day],\n            [meal]: null,\n          }\n        }\n      default :\n        return state\n    }\n  }\n  \n  export default combineReducers({\n    food,\n    calendar,\n  }) ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport reducer from './reducers'\nimport { Provider } from 'react-redux'\n\nconst logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd(action.type)\n  return result\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n    reducer,\n    composeEnhancers(\n      applyMiddleware(logger)\n    )\n  )\n\n\nReactDOM.render(<Provider store={store} ><App  /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}